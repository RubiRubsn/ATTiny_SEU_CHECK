
ATTiny.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000004ac  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800040  00800040  00000520  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000003f  00800040  00800040  00000520  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000520  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000550  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000078  00000000  00000000  0000058c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000a3b  00000000  00000000  00000604  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000067b  00000000  00000000  0000103f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000071b  00000000  00000000  000016ba  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000144  00000000  00000000  00001dd8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000490  00000000  00000000  00001f1c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000407  00000000  00000000  000023ac  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000068  00000000  00000000  000027b3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	10 c0       	rjmp	.+32     	; 0x22 <__ctors_end>
   2:	1f c0       	rjmp	.+62     	; 0x42 <__bad_interrupt>
   4:	1e c0       	rjmp	.+60     	; 0x42 <__bad_interrupt>
   6:	1d c0       	rjmp	.+58     	; 0x42 <__bad_interrupt>
   8:	1c c0       	rjmp	.+56     	; 0x42 <__bad_interrupt>
   a:	1b c0       	rjmp	.+54     	; 0x42 <__bad_interrupt>
   c:	1a c0       	rjmp	.+52     	; 0x42 <__bad_interrupt>
   e:	19 c0       	rjmp	.+50     	; 0x42 <__bad_interrupt>
  10:	18 c0       	rjmp	.+48     	; 0x42 <__bad_interrupt>
  12:	6c c0       	rjmp	.+216    	; 0xec <__vector_9>
  14:	16 c0       	rjmp	.+44     	; 0x42 <__bad_interrupt>
  16:	15 c0       	rjmp	.+42     	; 0x42 <__bad_interrupt>
  18:	14 c0       	rjmp	.+40     	; 0x42 <__bad_interrupt>
  1a:	13 c0       	rjmp	.+38     	; 0x42 <__bad_interrupt>
  1c:	12 c0       	rjmp	.+36     	; 0x42 <__bad_interrupt>
  1e:	11 c0       	rjmp	.+34     	; 0x42 <__bad_interrupt>
  20:	10 c0       	rjmp	.+32     	; 0x42 <__bad_interrupt>

00000022 <__ctors_end>:
  22:	11 27       	eor	r17, r17
  24:	1f bf       	out	0x3f, r17	; 63
  26:	cf eb       	ldi	r28, 0xBF	; 191
  28:	d0 e0       	ldi	r29, 0x00	; 0
  2a:	de bf       	out	0x3e, r29	; 62
  2c:	cd bf       	out	0x3d, r28	; 61

0000002e <__do_clear_bss>:
  2e:	20 e0       	ldi	r18, 0x00	; 0
  30:	a0 e4       	ldi	r26, 0x40	; 64
  32:	b0 e0       	ldi	r27, 0x00	; 0
  34:	01 c0       	rjmp	.+2      	; 0x38 <.do_clear_bss_start>

00000036 <.do_clear_bss_loop>:
  36:	1d 93       	st	X+, r17

00000038 <.do_clear_bss_start>:
  38:	af 37       	cpi	r26, 0x7F	; 127
  3a:	b2 07       	cpc	r27, r18
  3c:	e1 f7       	brne	.-8      	; 0x36 <.do_clear_bss_loop>
  3e:	ff d1       	rcall	.+1022   	; 0x43e <main>
  40:	33 c2       	rjmp	.+1126   	; 0x4a8 <_exit>

00000042 <__bad_interrupt>:
  42:	de cf       	rjmp	.-68     	; 0x0 <__vectors>

00000044 <_Z12volatile_TMRv>:
			A.A = A.B;
		}
		uart_send_report(adr, val);
	}
	return A.A;
};
  44:	6d a7       	lds	r22, 0x7d	; 0x80007d <tx_shift_reg_a>
  46:	7e a7       	lds	r23, 0x7e	; 0x80007e <tx_shift_reg_a+0x1>
  48:	4b a7       	lds	r20, 0x7b	; 0x80007b <tx_shift_reg_b>
  4a:	5c a7       	lds	r21, 0x7c	; 0x80007c <tx_shift_reg_b+0x1>
  4c:	64 17       	cp	r22, r20
  4e:	75 07       	cpc	r23, r21
  50:	39 f4       	brne	.+14     	; 0x60 <_Z12volatile_TMRv+0x1c>
  52:	6b a7       	lds	r22, 0x7b	; 0x80007b <tx_shift_reg_b>
  54:	7c a7       	lds	r23, 0x7c	; 0x80007c <tx_shift_reg_b+0x1>
  56:	49 a7       	lds	r20, 0x79	; 0x800079 <tx_shift_reg_c>
  58:	5a a7       	lds	r21, 0x7a	; 0x80007a <tx_shift_reg_c+0x1>
  5a:	64 17       	cp	r22, r20
  5c:	75 07       	cpc	r23, r21
  5e:	e1 f0       	breq	.+56     	; 0x98 <__DATA_REGION_LENGTH__+0x18>
  60:	6d a7       	lds	r22, 0x7d	; 0x80007d <tx_shift_reg_a>
  62:	7e a7       	lds	r23, 0x7e	; 0x80007e <tx_shift_reg_a+0x1>
  64:	4b a7       	lds	r20, 0x7b	; 0x80007b <tx_shift_reg_b>
  66:	5c a7       	lds	r21, 0x7c	; 0x80007c <tx_shift_reg_b+0x1>
  68:	64 17       	cp	r22, r20
  6a:	75 07       	cpc	r23, r21
  6c:	29 f4       	brne	.+10     	; 0x78 <_Z12volatile_TMRv+0x34>
  6e:	4d a7       	lds	r20, 0x7d	; 0x80007d <tx_shift_reg_a>
  70:	5e a7       	lds	r21, 0x7e	; 0x80007e <tx_shift_reg_a+0x1>
  72:	5a af       	sts	0x7a, r21	; 0x80007a <tx_shift_reg_c+0x1>
  74:	49 af       	sts	0x79, r20	; 0x800079 <tx_shift_reg_c>
  76:	10 c0       	rjmp	.+32     	; 0x98 <__DATA_REGION_LENGTH__+0x18>
  78:	6d a7       	lds	r22, 0x7d	; 0x80007d <tx_shift_reg_a>
  7a:	7e a7       	lds	r23, 0x7e	; 0x80007e <tx_shift_reg_a+0x1>
  7c:	49 a7       	lds	r20, 0x79	; 0x800079 <tx_shift_reg_c>
  7e:	5a a7       	lds	r21, 0x7a	; 0x80007a <tx_shift_reg_c+0x1>
  80:	64 17       	cp	r22, r20
  82:	75 07       	cpc	r23, r21
  84:	29 f4       	brne	.+10     	; 0x90 <__DATA_REGION_LENGTH__+0x10>
  86:	4d a7       	lds	r20, 0x7d	; 0x80007d <tx_shift_reg_a>
  88:	5e a7       	lds	r21, 0x7e	; 0x80007e <tx_shift_reg_a+0x1>
  8a:	5c af       	sts	0x7c, r21	; 0x80007c <tx_shift_reg_b+0x1>
  8c:	4b af       	sts	0x7b, r20	; 0x80007b <tx_shift_reg_b>
  8e:	04 c0       	rjmp	.+8      	; 0x98 <__DATA_REGION_LENGTH__+0x18>
  90:	4b a7       	lds	r20, 0x7b	; 0x80007b <tx_shift_reg_b>
  92:	5c a7       	lds	r21, 0x7c	; 0x80007c <tx_shift_reg_b+0x1>
  94:	5e af       	sts	0x7e, r21	; 0x80007e <tx_shift_reg_a+0x1>
  96:	4d af       	sts	0x7d, r20	; 0x80007d <tx_shift_reg_a>
  98:	8d a7       	lds	r24, 0x7d	; 0x80007d <tx_shift_reg_a>
  9a:	9e a7       	lds	r25, 0x7e	; 0x80007e <tx_shift_reg_a+0x1>
  9c:	08 95       	ret

0000009e <_Z11set_TMR_valj>:
  9e:	9e af       	sts	0x7e, r25	; 0x80007e <tx_shift_reg_a+0x1>
  a0:	8d af       	sts	0x7d, r24	; 0x80007d <tx_shift_reg_a>
  a2:	9c af       	sts	0x7c, r25	; 0x80007c <tx_shift_reg_b+0x1>
  a4:	8b af       	sts	0x7b, r24	; 0x80007b <tx_shift_reg_b>
  a6:	9a af       	sts	0x7a, r25	; 0x80007a <tx_shift_reg_c+0x1>
  a8:	89 af       	sts	0x79, r24	; 0x800079 <tx_shift_reg_c>
  aa:	08 95       	ret

000000ac <_Z7UART_txc>:
  ac:	cf 93       	push	r28
  ae:	c8 2f       	mov	r28, r24
  b0:	c9 df       	rcall	.-110    	; 0x44 <_Z12volatile_TMRv>
  b2:	89 2b       	or	r24, r25
  b4:	e9 f7       	brne	.-6      	; 0xb0 <_Z7UART_txc+0x4>
  b6:	8c 2f       	mov	r24, r28
  b8:	90 e0       	ldi	r25, 0x00	; 0
  ba:	88 0f       	add	r24, r24
  bc:	99 1f       	adc	r25, r25
  be:	92 60       	ori	r25, 0x02	; 2
  c0:	ee df       	rcall	.-36     	; 0x9e <_Z11set_TMR_valj>
  c2:	42 e0       	ldi	r20, 0x02	; 2
  c4:	48 bb       	out	0x18, r20	; 24
  c6:	cf 91       	pop	r28
  c8:	08 95       	ret

000000ca <_Z9UART_initv>:
  ca:	29 9a       	sbi	0x05, 1	; 5
  cc:	31 9a       	sbi	0x06, 1	; 6
  ce:	42 e0       	ldi	r20, 0x02	; 2
  d0:	49 bb       	out	0x19, r20	; 25
  d2:	46 b5       	in	r20, 0x26	; 38
  d4:	42 60       	ori	r20, 0x02	; 2
  d6:	46 bd       	out	0x26, r20	; 38
  d8:	47 e6       	ldi	r20, 0x67	; 103
  da:	46 bb       	out	0x16, r20	; 22
  dc:	78 94       	sei
  de:	08 95       	ret

000000e0 <_Z16uart_send_reporthh>:
  e0:	cf 93       	push	r28
  e2:	c6 2f       	mov	r28, r22
  e4:	e3 df       	rcall	.-58     	; 0xac <_Z7UART_txc>
  e6:	8c 2f       	mov	r24, r28
  e8:	cf 91       	pop	r28
  ea:	e0 cf       	rjmp	.-64     	; 0xac <_Z7UART_txc>

000000ec <__vector_9>:
  ec:	1f 93       	push	r17
  ee:	0f 93       	push	r16
  f0:	0f b7       	in	r16, 0x3f	; 63
  f2:	0f 93       	push	r16
  f4:	10 e0       	ldi	r17, 0x00	; 0
  f6:	4f 93       	push	r20
  f8:	5f 93       	push	r21
  fa:	6f 93       	push	r22
  fc:	7f 93       	push	r23
  fe:	8f 93       	push	r24
 100:	9f 93       	push	r25
 102:	af 93       	push	r26
 104:	bf 93       	push	r27
 106:	ef 93       	push	r30
 108:	ff 93       	push	r31
 10a:	17 bb       	out	0x17, r17	; 23
 10c:	9b df       	rcall	.-202    	; 0x44 <_Z12volatile_TMRv>
 10e:	80 ff       	sbrs	r24, 0
 110:	02 c0       	rjmp	.+4      	; 0x116 <__vector_9+0x2a>
 112:	31 9a       	sbi	0x06, 1	; 6
 114:	01 c0       	rjmp	.+2      	; 0x118 <__vector_9+0x2c>
 116:	31 98       	cbi	0x06, 1	; 6
 118:	95 df       	rcall	.-214    	; 0x44 <_Z12volatile_TMRv>
 11a:	96 95       	lsr	r25
 11c:	87 95       	ror	r24
 11e:	bf df       	rcall	.-130    	; 0x9e <_Z11set_TMR_valj>
 120:	91 df       	rcall	.-222    	; 0x44 <_Z12volatile_TMRv>
 122:	89 2b       	or	r24, r25
 124:	11 f4       	brne	.+4      	; 0x12a <__vector_9+0x3e>
 126:	18 bb       	out	0x18, r17	; 24
 128:	17 bb       	out	0x17, r17	; 23
 12a:	ff 91       	pop	r31
 12c:	ef 91       	pop	r30
 12e:	bf 91       	pop	r27
 130:	af 91       	pop	r26
 132:	9f 91       	pop	r25
 134:	8f 91       	pop	r24
 136:	7f 91       	pop	r23
 138:	6f 91       	pop	r22
 13a:	5f 91       	pop	r21
 13c:	4f 91       	pop	r20
 13e:	0f 91       	pop	r16
 140:	0f bf       	out	0x3f, r16	; 63
 142:	0f 91       	pop	r16
 144:	1f 91       	pop	r17
 146:	18 95       	reti

00000148 <_Z13test_registerv>:
 148:	48 b1       	in	r20, 0x08	; 8
 14a:	43 70       	andi	r20, 0x03	; 3
 14c:	49 f0       	breq	.+18     	; 0x160 <_Z13test_registerv+0x18>
 14e:	48 e8       	ldi	r20, 0x88	; 136
 150:	46 a9       	sts	0x46, r20	; 0x800046 <adr>
 152:	48 b1       	in	r20, 0x08	; 8
 154:	43 70       	andi	r20, 0x03	; 3
 156:	45 a9       	sts	0x45, r20	; 0x800045 <val>
 158:	48 b1       	in	r20, 0x08	; 8
 15a:	4c 7f       	andi	r20, 0xFC	; 252
 15c:	48 b9       	out	0x08, r20	; 8
 15e:	e9 c0       	rjmp	.+466    	; 0x332 <_Z13test_registerv+0x1ea>
 160:	49 b1       	in	r20, 0x09	; 9
 162:	44 23       	and	r20, r20
 164:	31 f0       	breq	.+12     	; 0x172 <_Z13test_registerv+0x2a>
 166:	49 e8       	ldi	r20, 0x89	; 137
 168:	46 a9       	sts	0x46, r20	; 0x800046 <adr>
 16a:	49 b1       	in	r20, 0x09	; 9
 16c:	45 a9       	sts	0x45, r20	; 0x800045 <val>
 16e:	19 b9       	out	0x09, r17	; 9
 170:	e0 c0       	rjmp	.+448    	; 0x332 <_Z13test_registerv+0x1ea>
 172:	4a b1       	in	r20, 0x0a	; 10
 174:	4f 70       	andi	r20, 0x0F	; 15
 176:	49 f0       	breq	.+18     	; 0x18a <_Z13test_registerv+0x42>
 178:	4a e8       	ldi	r20, 0x8A	; 138
 17a:	46 a9       	sts	0x46, r20	; 0x800046 <adr>
 17c:	4a b1       	in	r20, 0x0a	; 10
 17e:	4f 70       	andi	r20, 0x0F	; 15
 180:	45 a9       	sts	0x45, r20	; 0x800045 <val>
 182:	4a b1       	in	r20, 0x0a	; 10
 184:	40 7f       	andi	r20, 0xF0	; 240
 186:	4a b9       	out	0x0a, r20	; 10
 188:	d4 c0       	rjmp	.+424    	; 0x332 <_Z13test_registerv+0x1ea>
 18a:	4d b1       	in	r20, 0x0d	; 13
 18c:	44 23       	and	r20, r20
 18e:	31 f0       	breq	.+12     	; 0x19c <_Z13test_registerv+0x54>
 190:	4d e8       	ldi	r20, 0x8D	; 141
 192:	46 a9       	sts	0x46, r20	; 0x800046 <adr>
 194:	4d b1       	in	r20, 0x0d	; 13
 196:	45 a9       	sts	0x45, r20	; 0x800045 <val>
 198:	1d b9       	out	0x0d, r17	; 13
 19a:	cb c0       	rjmp	.+406    	; 0x332 <_Z13test_registerv+0x1ea>
 19c:	40 b3       	in	r20, 0x10	; 16
 19e:	4f 77       	andi	r20, 0x7F	; 127
 1a0:	49 f0       	breq	.+18     	; 0x1b4 <_Z13test_registerv+0x6c>
 1a2:	40 e9       	ldi	r20, 0x90	; 144
 1a4:	46 a9       	sts	0x46, r20	; 0x800046 <adr>
 1a6:	40 b3       	in	r20, 0x10	; 16
 1a8:	4f 77       	andi	r20, 0x7F	; 127
 1aa:	45 a9       	sts	0x45, r20	; 0x800045 <val>
 1ac:	40 b3       	in	r20, 0x10	; 16
 1ae:	40 78       	andi	r20, 0x80	; 128
 1b0:	40 bb       	out	0x10, r20	; 16
 1b2:	bf c0       	rjmp	.+382    	; 0x332 <_Z13test_registerv+0x1ea>
 1b4:	41 b3       	in	r20, 0x11	; 17
 1b6:	4f 7c       	andi	r20, 0xCF	; 207
 1b8:	49 f0       	breq	.+18     	; 0x1cc <_Z13test_registerv+0x84>
 1ba:	41 e9       	ldi	r20, 0x91	; 145
 1bc:	46 a9       	sts	0x46, r20	; 0x800046 <adr>
 1be:	41 b3       	in	r20, 0x11	; 17
 1c0:	4f 7c       	andi	r20, 0xCF	; 207
 1c2:	45 a9       	sts	0x45, r20	; 0x800045 <val>
 1c4:	41 b3       	in	r20, 0x11	; 17
 1c6:	40 73       	andi	r20, 0x30	; 48
 1c8:	41 bb       	out	0x11, r20	; 17
 1ca:	b3 c0       	rjmp	.+358    	; 0x332 <_Z13test_registerv+0x1ea>
 1cc:	42 b3       	in	r20, 0x12	; 18
 1ce:	44 23       	and	r20, r20
 1d0:	31 f0       	breq	.+12     	; 0x1de <_Z13test_registerv+0x96>
 1d2:	42 e9       	ldi	r20, 0x92	; 146
 1d4:	46 a9       	sts	0x46, r20	; 0x800046 <adr>
 1d6:	42 b3       	in	r20, 0x12	; 18
 1d8:	45 a9       	sts	0x45, r20	; 0x800045 <val>
 1da:	12 bb       	out	0x12, r17	; 18
 1dc:	aa c0       	rjmp	.+340    	; 0x332 <_Z13test_registerv+0x1ea>
 1de:	43 b3       	in	r20, 0x13	; 19
 1e0:	4f 7e       	andi	r20, 0xEF	; 239
 1e2:	49 f0       	breq	.+18     	; 0x1f6 <_Z13test_registerv+0xae>
 1e4:	43 e9       	ldi	r20, 0x93	; 147
 1e6:	46 a9       	sts	0x46, r20	; 0x800046 <adr>
 1e8:	43 b3       	in	r20, 0x13	; 19
 1ea:	4f 7e       	andi	r20, 0xEF	; 239
 1ec:	45 a9       	sts	0x45, r20	; 0x800045 <val>
 1ee:	43 b3       	in	r20, 0x13	; 19
 1f0:	40 71       	andi	r20, 0x10	; 16
 1f2:	43 bb       	out	0x13, r20	; 19
 1f4:	9e c0       	rjmp	.+316    	; 0x332 <_Z13test_registerv+0x1ea>
 1f6:	45 b3       	in	r20, 0x15	; 21
 1f8:	44 23       	and	r20, r20
 1fa:	31 f0       	breq	.+12     	; 0x208 <_Z13test_registerv+0xc0>
 1fc:	45 e9       	ldi	r20, 0x95	; 149
 1fe:	46 a9       	sts	0x46, r20	; 0x800046 <adr>
 200:	45 b3       	in	r20, 0x15	; 21
 202:	45 a9       	sts	0x45, r20	; 0x800045 <val>
 204:	15 bb       	out	0x15, r17	; 21
 206:	95 c0       	rjmp	.+298    	; 0x332 <_Z13test_registerv+0x1ea>
 208:	40 b5       	in	r20, 0x20	; 32
 20a:	44 23       	and	r20, r20
 20c:	31 f0       	breq	.+12     	; 0x21a <_Z13test_registerv+0xd2>
 20e:	40 ea       	ldi	r20, 0xA0	; 160
 210:	46 a9       	sts	0x46, r20	; 0x800046 <adr>
 212:	40 b5       	in	r20, 0x20	; 32
 214:	45 a9       	sts	0x45, r20	; 0x800045 <val>
 216:	10 bd       	out	0x20, r17	; 32
 218:	8c c0       	rjmp	.+280    	; 0x332 <_Z13test_registerv+0x1ea>
 21a:	41 b5       	in	r20, 0x21	; 33
 21c:	44 23       	and	r20, r20
 21e:	31 f0       	breq	.+12     	; 0x22c <_Z13test_registerv+0xe4>
 220:	41 ea       	ldi	r20, 0xA1	; 161
 222:	46 a9       	sts	0x46, r20	; 0x800046 <adr>
 224:	41 b5       	in	r20, 0x21	; 33
 226:	45 a9       	sts	0x45, r20	; 0x800045 <val>
 228:	11 bd       	out	0x21, r17	; 33
 22a:	83 c0       	rjmp	.+262    	; 0x332 <_Z13test_registerv+0x1ea>
 22c:	43 b5       	in	r20, 0x23	; 35
 22e:	4f 7d       	andi	r20, 0xDF	; 223
 230:	49 f0       	breq	.+18     	; 0x244 <_Z13test_registerv+0xfc>
 232:	43 ea       	ldi	r20, 0xA3	; 163
 234:	46 a9       	sts	0x46, r20	; 0x800046 <adr>
 236:	43 b5       	in	r20, 0x23	; 35
 238:	4f 7d       	andi	r20, 0xDF	; 223
 23a:	45 a9       	sts	0x45, r20	; 0x800045 <val>
 23c:	43 b5       	in	r20, 0x23	; 35
 23e:	40 72       	andi	r20, 0x20	; 32
 240:	43 bd       	out	0x23, r20	; 35
 242:	77 c0       	rjmp	.+238    	; 0x332 <_Z13test_registerv+0x1ea>
 244:	44 b5       	in	r20, 0x24	; 36
 246:	43 7f       	andi	r20, 0xF3	; 243
 248:	49 f0       	breq	.+18     	; 0x25c <_Z13test_registerv+0x114>
 24a:	44 ea       	ldi	r20, 0xA4	; 164
 24c:	46 a9       	sts	0x46, r20	; 0x800046 <adr>
 24e:	44 b5       	in	r20, 0x24	; 36
 250:	43 7f       	andi	r20, 0xF3	; 243
 252:	45 a9       	sts	0x45, r20	; 0x800045 <val>
 254:	44 b5       	in	r20, 0x24	; 36
 256:	4c 70       	andi	r20, 0x0C	; 12
 258:	44 bd       	out	0x24, r20	; 36
 25a:	6b c0       	rjmp	.+214    	; 0x332 <_Z13test_registerv+0x1ea>
 25c:	47 b5       	in	r20, 0x27	; 39
 25e:	41 78       	andi	r20, 0x81	; 129
 260:	49 f0       	breq	.+18     	; 0x274 <_Z13test_registerv+0x12c>
 262:	47 ea       	ldi	r20, 0xA7	; 167
 264:	46 a9       	sts	0x46, r20	; 0x800046 <adr>
 266:	47 b5       	in	r20, 0x27	; 39
 268:	41 78       	andi	r20, 0x81	; 129
 26a:	45 a9       	sts	0x45, r20	; 0x800045 <val>
 26c:	47 b5       	in	r20, 0x27	; 39
 26e:	4e 77       	andi	r20, 0x7E	; 126
 270:	47 bd       	out	0x27, r20	; 39
 272:	5f c0       	rjmp	.+190    	; 0x332 <_Z13test_registerv+0x1ea>
 274:	48 b5       	in	r20, 0x28	; 40
 276:	44 23       	and	r20, r20
 278:	31 f0       	breq	.+12     	; 0x286 <_Z13test_registerv+0x13e>
 27a:	48 ea       	ldi	r20, 0xA8	; 168
 27c:	46 a9       	sts	0x46, r20	; 0x800046 <adr>
 27e:	48 b5       	in	r20, 0x28	; 40
 280:	45 a9       	sts	0x45, r20	; 0x800045 <val>
 282:	18 bd       	out	0x28, r17	; 40
 284:	56 c0       	rjmp	.+172    	; 0x332 <_Z13test_registerv+0x1ea>
 286:	49 b5       	in	r20, 0x29	; 41
 288:	44 23       	and	r20, r20
 28a:	31 f0       	breq	.+12     	; 0x298 <_Z13test_registerv+0x150>
 28c:	49 ea       	ldi	r20, 0xA9	; 169
 28e:	46 a9       	sts	0x46, r20	; 0x800046 <adr>
 290:	49 b5       	in	r20, 0x29	; 41
 292:	45 a9       	sts	0x45, r20	; 0x800045 <val>
 294:	19 bd       	out	0x29, r17	; 41
 296:	4d c0       	rjmp	.+154    	; 0x332 <_Z13test_registerv+0x1ea>
 298:	4a b5       	in	r20, 0x2a	; 42
 29a:	44 23       	and	r20, r20
 29c:	31 f0       	breq	.+12     	; 0x2aa <_Z13test_registerv+0x162>
 29e:	4a ea       	ldi	r20, 0xAA	; 170
 2a0:	46 a9       	sts	0x46, r20	; 0x800046 <adr>
 2a2:	4a b5       	in	r20, 0x2a	; 42
 2a4:	45 a9       	sts	0x45, r20	; 0x800045 <val>
 2a6:	1a bd       	out	0x2a, r17	; 42
 2a8:	44 c0       	rjmp	.+136    	; 0x332 <_Z13test_registerv+0x1ea>
 2aa:	4b b5       	in	r20, 0x2b	; 43
 2ac:	4f 7c       	andi	r20, 0xCF	; 207
 2ae:	49 f0       	breq	.+18     	; 0x2c2 <_Z13test_registerv+0x17a>
 2b0:	4b ea       	ldi	r20, 0xAB	; 171
 2b2:	46 a9       	sts	0x46, r20	; 0x800046 <adr>
 2b4:	4b b5       	in	r20, 0x2b	; 43
 2b6:	4f 7c       	andi	r20, 0xCF	; 207
 2b8:	45 a9       	sts	0x45, r20	; 0x800045 <val>
 2ba:	4b b5       	in	r20, 0x2b	; 43
 2bc:	40 73       	andi	r20, 0x30	; 48
 2be:	4b bd       	out	0x2b, r20	; 43
 2c0:	38 c0       	rjmp	.+112    	; 0x332 <_Z13test_registerv+0x1ea>
 2c2:	0c b5       	in	r16, 0x2c	; 44
 2c4:	02 ff       	sbrs	r16, 2
 2c6:	09 c0       	rjmp	.+18     	; 0x2da <_Z13test_registerv+0x192>
 2c8:	4c ea       	ldi	r20, 0xAC	; 172
 2ca:	46 a9       	sts	0x46, r20	; 0x800046 <adr>
 2cc:	4c b5       	in	r20, 0x2c	; 44
 2ce:	44 70       	andi	r20, 0x04	; 4
 2d0:	45 a9       	sts	0x45, r20	; 0x800045 <val>
 2d2:	4c b5       	in	r20, 0x2c	; 44
 2d4:	4b 7f       	andi	r20, 0xFB	; 251
 2d6:	4c bd       	out	0x2c, r20	; 44
 2d8:	2c c0       	rjmp	.+88     	; 0x332 <_Z13test_registerv+0x1ea>
 2da:	4d b5       	in	r20, 0x2d	; 45
 2dc:	4f 7b       	andi	r20, 0xBF	; 191
 2de:	49 f0       	breq	.+18     	; 0x2f2 <_Z13test_registerv+0x1aa>
 2e0:	4d ea       	ldi	r20, 0xAD	; 173
 2e2:	46 a9       	sts	0x46, r20	; 0x800046 <adr>
 2e4:	4d b5       	in	r20, 0x2d	; 45
 2e6:	4f 7b       	andi	r20, 0xBF	; 191
 2e8:	45 a9       	sts	0x45, r20	; 0x800045 <val>
 2ea:	4d b5       	in	r20, 0x2d	; 45
 2ec:	40 74       	andi	r20, 0x40	; 64
 2ee:	4d bd       	out	0x2d, r20	; 45
 2f0:	20 c0       	rjmp	.+64     	; 0x332 <_Z13test_registerv+0x1ea>
 2f2:	40 b7       	in	r20, 0x30	; 48
 2f4:	44 23       	and	r20, r20
 2f6:	31 f0       	breq	.+12     	; 0x304 <_Z13test_registerv+0x1bc>
 2f8:	40 eb       	ldi	r20, 0xB0	; 176
 2fa:	46 a9       	sts	0x46, r20	; 0x800046 <adr>
 2fc:	40 b7       	in	r20, 0x30	; 48
 2fe:	45 a9       	sts	0x45, r20	; 0x800045 <val>
 300:	10 bf       	out	0x30, r17	; 48
 302:	17 c0       	rjmp	.+46     	; 0x332 <_Z13test_registerv+0x1ea>
 304:	45 b7       	in	r20, 0x35	; 53
 306:	4f 71       	andi	r20, 0x1F	; 31
 308:	49 f0       	breq	.+18     	; 0x31c <_Z13test_registerv+0x1d4>
 30a:	45 eb       	ldi	r20, 0xB5	; 181
 30c:	46 a9       	sts	0x46, r20	; 0x800046 <adr>
 30e:	45 b7       	in	r20, 0x35	; 53
 310:	4f 71       	andi	r20, 0x1F	; 31
 312:	45 a9       	sts	0x45, r20	; 0x800045 <val>
 314:	45 b7       	in	r20, 0x35	; 53
 316:	40 7e       	andi	r20, 0xE0	; 224
 318:	45 bf       	out	0x35, r20	; 53
 31a:	0b c0       	rjmp	.+22     	; 0x332 <_Z13test_registerv+0x1ea>
 31c:	4a b7       	in	r20, 0x3a	; 58
 31e:	4f 7d       	andi	r20, 0xDF	; 223
 320:	69 f0       	breq	.+26     	; 0x33c <_Z13test_registerv+0x1f4>
 322:	4a eb       	ldi	r20, 0xBA	; 186
 324:	46 a9       	sts	0x46, r20	; 0x800046 <adr>
 326:	4a b7       	in	r20, 0x3a	; 58
 328:	4f 7d       	andi	r20, 0xDF	; 223
 32a:	45 a9       	sts	0x45, r20	; 0x800045 <val>
 32c:	4a b7       	in	r20, 0x3a	; 58
 32e:	40 72       	andi	r20, 0x20	; 32
 330:	4a bf       	out	0x3a, r20	; 58
 332:	84 e2       	ldi	r24, 0x24	; 36
 334:	bb de       	rcall	.-650    	; 0xac <_Z7UART_txc>
 336:	65 a1       	lds	r22, 0x45	; 0x800045 <val>
 338:	86 a1       	lds	r24, 0x46	; 0x800046 <adr>
 33a:	d2 ce       	rjmp	.-604    	; 0xe0 <_Z16uart_send_reporthh>
 33c:	08 95       	ret

0000033e <_Z3TMRRhS_S_>:
 33e:	2f 93       	push	r18
 340:	3f 93       	push	r19
 342:	cf 93       	push	r28
 344:	df 93       	push	r29
 346:	cd b7       	in	r28, 0x3d	; 61
 348:	de b7       	in	r29, 0x3e	; 62
 34a:	e8 2f       	mov	r30, r24
 34c:	f9 2f       	mov	r31, r25
 34e:	26 2f       	mov	r18, r22
 350:	37 2f       	mov	r19, r23
 352:	60 81       	ld	r22, Z
 354:	a2 2f       	mov	r26, r18
 356:	b3 2f       	mov	r27, r19
 358:	7c 91       	ld	r23, X
 35a:	a4 2f       	mov	r26, r20
 35c:	b5 2f       	mov	r27, r21
 35e:	8c 91       	ld	r24, X
 360:	67 13       	cpse	r22, r23
 362:	08 c0       	rjmp	.+16     	; 0x374 <_Z3TMRRhS_S_+0x36>
 364:	68 17       	cp	r22, r24
 366:	f9 f0       	breq	.+62     	; 0x3a6 <_Z3TMRRhS_S_+0x68>
 368:	46 a9       	sts	0x46, r20	; 0x800046 <adr>
 36a:	6c 91       	ld	r22, X
 36c:	65 a9       	sts	0x45, r22	; 0x800045 <val>
 36e:	60 81       	ld	r22, Z
 370:	6c 93       	st	X, r22
 372:	11 c0       	rjmp	.+34     	; 0x396 <_Z3TMRRhS_S_+0x58>
 374:	68 13       	cpse	r22, r24
 376:	08 c0       	rjmp	.+16     	; 0x388 <_Z3TMRRhS_S_+0x4a>
 378:	26 a9       	sts	0x46, r18	; 0x800046 <adr>
 37a:	a2 2f       	mov	r26, r18
 37c:	b3 2f       	mov	r27, r19
 37e:	4c 91       	ld	r20, X
 380:	45 a9       	sts	0x45, r20	; 0x800045 <val>
 382:	40 81       	ld	r20, Z
 384:	4c 93       	st	X, r20
 386:	07 c0       	rjmp	.+14     	; 0x396 <_Z3TMRRhS_S_+0x58>
 388:	e6 a9       	sts	0x46, r30	; 0x800046 <adr>
 38a:	40 81       	ld	r20, Z
 38c:	45 a9       	sts	0x45, r20	; 0x800045 <val>
 38e:	a2 2f       	mov	r26, r18
 390:	b3 2f       	mov	r27, r19
 392:	4c 91       	ld	r20, X
 394:	40 83       	st	Z, r20
 396:	2e 2f       	mov	r18, r30
 398:	3f 2f       	mov	r19, r31
 39a:	65 a1       	lds	r22, 0x45	; 0x800045 <val>
 39c:	86 a1       	lds	r24, 0x46	; 0x800046 <adr>
 39e:	a0 de       	rcall	.-704    	; 0xe0 <_Z16uart_send_reporthh>
 3a0:	e2 2f       	mov	r30, r18
 3a2:	f3 2f       	mov	r31, r19
 3a4:	80 81       	ld	r24, Z
 3a6:	df 91       	pop	r29
 3a8:	cf 91       	pop	r28
 3aa:	3f 91       	pop	r19
 3ac:	2f 91       	pop	r18
 3ae:	08 95       	ret

000003b0 <_Z3TMRR15tripple_uint8_t>:
 3b0:	48 2f       	mov	r20, r24
 3b2:	59 2f       	mov	r21, r25
 3b4:	4e 5f       	subi	r20, 0xFE	; 254
 3b6:	5f 4f       	sbci	r21, 0xFF	; 255
 3b8:	68 2f       	mov	r22, r24
 3ba:	79 2f       	mov	r23, r25
 3bc:	6f 5f       	subi	r22, 0xFF	; 255
 3be:	7f 4f       	sbci	r23, 0xFF	; 255
 3c0:	be cf       	rjmp	.-132    	; 0x33e <_Z3TMRRhS_S_>

000003c2 <_Z11test_memoryv>:
	return 0;
}

void test_memory()
{
	i.A = 0;
 3c2:	10 a9       	sts	0x40, r17	; 0x800040 <__DATA_REGION_ORIGIN__>
	i.B = 0;
 3c4:	11 a9       	sts	0x41, r17	; 0x800041 <__DATA_REGION_ORIGIN__+0x1>
	i.C = 0;
 3c6:	12 a9       	sts	0x42, r17	; 0x800042 <__DATA_REGION_ORIGIN__+0x2>
	for (i.A = 0; TMR(i) < nr_zells; i.A++, i.B++, i.C++)
 3c8:	80 e4       	ldi	r24, 0x40	; 64
 3ca:	90 e0       	ldi	r25, 0x00	; 0
 3cc:	f1 df       	rcall	.-30     	; 0x3b0 <_Z3TMRR15tripple_uint8_t>
 3ce:	82 33       	cpi	r24, 0x32	; 50
 3d0:	a8 f5       	brcc	.+106    	; 0x43c <_Z11test_memoryv+0x7a>
	{
		if (test[TMR(i)] != TEST_PATTERN)
 3d2:	80 e4       	ldi	r24, 0x40	; 64
 3d4:	90 e0       	ldi	r25, 0x00	; 0
 3d6:	ec df       	rcall	.-40     	; 0x3b0 <_Z3TMRR15tripple_uint8_t>
 3d8:	90 e0       	ldi	r25, 0x00	; 0
 3da:	e8 2f       	mov	r30, r24
 3dc:	f9 2f       	mov	r31, r25
 3de:	e9 5b       	subi	r30, 0xB9	; 185
 3e0:	ff 4f       	sbci	r31, 0xFF	; 255
 3e2:	40 81       	ld	r20, Z
 3e4:	4a 3a       	cpi	r20, 0xAA	; 170
 3e6:	01 f1       	breq	.+64     	; 0x428 <_Z11test_memoryv+0x66>
		{
			adr = (uint8_t)(short)&test[TMR(i)];
 3e8:	80 e4       	ldi	r24, 0x40	; 64
 3ea:	90 e0       	ldi	r25, 0x00	; 0
 3ec:	e1 df       	rcall	.-62     	; 0x3b0 <_Z3TMRR15tripple_uint8_t>
 3ee:	90 e0       	ldi	r25, 0x00	; 0
 3f0:	89 5b       	subi	r24, 0xB9	; 185
 3f2:	9f 4f       	sbci	r25, 0xFF	; 255
 3f4:	86 a9       	sts	0x46, r24	; 0x800046 <adr>
			val = test[TMR(i)];
 3f6:	80 e4       	ldi	r24, 0x40	; 64
 3f8:	90 e0       	ldi	r25, 0x00	; 0
 3fa:	da df       	rcall	.-76     	; 0x3b0 <_Z3TMRR15tripple_uint8_t>
 3fc:	90 e0       	ldi	r25, 0x00	; 0
 3fe:	e8 2f       	mov	r30, r24
 400:	f9 2f       	mov	r31, r25
 402:	e9 5b       	subi	r30, 0xB9	; 185
 404:	ff 4f       	sbci	r31, 0xFF	; 255
 406:	40 81       	ld	r20, Z
 408:	45 a9       	sts	0x45, r20	; 0x800045 <val>
			test[TMR(i)] = TEST_PATTERN;
 40a:	80 e4       	ldi	r24, 0x40	; 64
 40c:	90 e0       	ldi	r25, 0x00	; 0
 40e:	d0 df       	rcall	.-96     	; 0x3b0 <_Z3TMRR15tripple_uint8_t>
 410:	90 e0       	ldi	r25, 0x00	; 0
 412:	e8 2f       	mov	r30, r24
 414:	f9 2f       	mov	r31, r25
 416:	e9 5b       	subi	r30, 0xB9	; 185
 418:	ff 4f       	sbci	r31, 0xFF	; 255
 41a:	4a ea       	ldi	r20, 0xAA	; 170
 41c:	40 83       	st	Z, r20
			UART_tx('$');
 41e:	84 e2       	ldi	r24, 0x24	; 36
 420:	45 de       	rcall	.-886    	; 0xac <_Z7UART_txc>
			uart_send_report(adr, val);
 422:	65 a1       	lds	r22, 0x45	; 0x800045 <val>
 424:	86 a1       	lds	r24, 0x46	; 0x800046 <adr>
 426:	5c de       	rcall	.-840    	; 0xe0 <_Z16uart_send_reporthh>
void test_memory()
{
	i.A = 0;
	i.B = 0;
	i.C = 0;
	for (i.A = 0; TMR(i) < nr_zells; i.A++, i.B++, i.C++)
 428:	40 a1       	lds	r20, 0x40	; 0x800040 <__DATA_REGION_ORIGIN__>
 42a:	4f 5f       	subi	r20, 0xFF	; 255
 42c:	40 a9       	sts	0x40, r20	; 0x800040 <__DATA_REGION_ORIGIN__>
 42e:	41 a1       	lds	r20, 0x41	; 0x800041 <__DATA_REGION_ORIGIN__+0x1>
 430:	4f 5f       	subi	r20, 0xFF	; 255
 432:	41 a9       	sts	0x41, r20	; 0x800041 <__DATA_REGION_ORIGIN__+0x1>
 434:	42 a1       	lds	r20, 0x42	; 0x800042 <__DATA_REGION_ORIGIN__+0x2>
 436:	4f 5f       	subi	r20, 0xFF	; 255
 438:	42 a9       	sts	0x42, r20	; 0x800042 <__DATA_REGION_ORIGIN__+0x2>
 43a:	c6 cf       	rjmp	.-116    	; 0x3c8 <_Z11test_memoryv+0x6>
 43c:	08 95       	ret

0000043e <main>:
	return A.A;
};

int main(void)
{
	CCP = 0xD8;	  // disable Configuration Change Protection Register
 43e:	48 ed       	ldi	r20, 0xD8	; 216
 440:	4c bf       	out	0x3c, r20	; 60
	CLKPSR = 0x0; // Clock Division Factor = 1			//vielleicht doch durch 8
 442:	16 bf       	out	0x36, r17	; 54
	UART_init();
 444:	42 de       	rcall	.-892    	; 0xca <_Z9UART_initv>
	DDRA |= 1 << PA5; /* set PA5 to output (LED)*/
 446:	0d 9a       	sbi	0x01, 5	; 1
	i.A = 0;
 448:	10 a9       	sts	0x40, r17	; 0x800040 <__DATA_REGION_ORIGIN__>
	i.B = 0;
 44a:	11 a9       	sts	0x41, r17	; 0x800041 <__DATA_REGION_ORIGIN__+0x1>
	i.C = 0;
 44c:	12 a9       	sts	0x42, r17	; 0x800042 <__DATA_REGION_ORIGIN__+0x2>
	for (i.A = 0; TMR(i) < nr_zells; i.A++, i.B++, i.C++)
 44e:	80 e4       	ldi	r24, 0x40	; 64
 450:	90 e0       	ldi	r25, 0x00	; 0
 452:	ae df       	rcall	.-164    	; 0x3b0 <_Z3TMRR15tripple_uint8_t>
 454:	82 33       	cpi	r24, 0x32	; 50
 456:	00 f5       	brcc	.+64     	; 0x498 <main+0x5a>
	{
		test[TMR(i)] = TEST_PATTERN;
 458:	80 e4       	ldi	r24, 0x40	; 64
 45a:	90 e0       	ldi	r25, 0x00	; 0
 45c:	a9 df       	rcall	.-174    	; 0x3b0 <_Z3TMRR15tripple_uint8_t>
 45e:	90 e0       	ldi	r25, 0x00	; 0
 460:	e8 2f       	mov	r30, r24
 462:	f9 2f       	mov	r31, r25
 464:	e9 5b       	subi	r30, 0xB9	; 185
 466:	ff 4f       	sbci	r31, 0xFF	; 255
 468:	4a ea       	ldi	r20, 0xAA	; 170
 46a:	40 83       	st	Z, r20
	UART_init();
	DDRA |= 1 << PA5; /* set PA5 to output (LED)*/
	i.A = 0;
	i.B = 0;
	i.C = 0;
	for (i.A = 0; TMR(i) < nr_zells; i.A++, i.B++, i.C++)
 46c:	40 a1       	lds	r20, 0x40	; 0x800040 <__DATA_REGION_ORIGIN__>
 46e:	4f 5f       	subi	r20, 0xFF	; 255
 470:	40 a9       	sts	0x40, r20	; 0x800040 <__DATA_REGION_ORIGIN__>
 472:	41 a1       	lds	r20, 0x41	; 0x800041 <__DATA_REGION_ORIGIN__+0x1>
 474:	4f 5f       	subi	r20, 0xFF	; 255
 476:	41 a9       	sts	0x41, r20	; 0x800041 <__DATA_REGION_ORIGIN__+0x1>
 478:	42 a1       	lds	r20, 0x42	; 0x800042 <__DATA_REGION_ORIGIN__+0x2>
 47a:	4f 5f       	subi	r20, 0xFF	; 255
 47c:	42 a9       	sts	0x42, r20	; 0x800042 <__DATA_REGION_ORIGIN__+0x2>
 47e:	e7 cf       	rjmp	.-50     	; 0x44e <main+0x10>
	{
		test_memory();
		test_register();
		if (++counter == 0)
		{
			PORTA ^= 1 << PA5;
 480:	52 b1       	in	r21, 0x02	; 2
 482:	40 e2       	ldi	r20, 0x20	; 32
 484:	45 27       	eor	r20, r21
 486:	42 b9       	out	0x02, r20	; 2
			if (++counter_two == 10)
 488:	44 a1       	lds	r20, 0x44	; 0x800044 <counter_two>
 48a:	4f 5f       	subi	r20, 0xFF	; 255
 48c:	44 a9       	sts	0x44, r20	; 0x800044 <counter_two>
 48e:	4a 30       	cpi	r20, 0x0A	; 10
 490:	19 f4       	brne	.+6      	; 0x498 <main+0x5a>
			{

				UART_tx((char)('.'));
 492:	8e e2       	ldi	r24, 0x2E	; 46
 494:	0b de       	rcall	.-1002   	; 0xac <_Z7UART_txc>
				counter_two = 0;
 496:	14 a9       	sts	0x44, r17	; 0x800044 <counter_two>
		test[TMR(i)] = TEST_PATTERN;
	}

	while (1)
	{
		test_memory();
 498:	94 df       	rcall	.-216    	; 0x3c2 <_Z11test_memoryv>
		test_register();
 49a:	56 de       	rcall	.-852    	; 0x148 <_Z13test_registerv>
		if (++counter == 0)
 49c:	43 a1       	lds	r20, 0x43	; 0x800043 <counter>
 49e:	4f 5f       	subi	r20, 0xFF	; 255
 4a0:	43 a9       	sts	0x43, r20	; 0x800043 <counter>
 4a2:	41 13       	cpse	r20, r17
 4a4:	f9 cf       	rjmp	.-14     	; 0x498 <main+0x5a>
 4a6:	ec cf       	rjmp	.-40     	; 0x480 <main+0x42>

000004a8 <_exit>:
 4a8:	f8 94       	cli

000004aa <__stop_program>:
 4aa:	ff cf       	rjmp	.-2      	; 0x4aa <__stop_program>
